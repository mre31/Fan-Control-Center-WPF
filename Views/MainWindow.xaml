<Window x:Class="CFanControl.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CFanControl.Views"
        xmlns:viewmodels="clr-namespace:CFanControl.ViewModels"
        mc:Ignorable="d"
        Title="Fan Control Center" Height="400" Width="800"
        MinHeight="400" MinWidth="800"
        Icon="/Resources/icon.ico"
        Background="{StaticResource WindowBackgroundBrush}"
        KeyDown="Window_KeyDown"
        Loaded="Window_Loaded"
        Closing="Window_Closing"
        WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- TextBlock için varsayılan stil -->
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="#FFFFFF"/>
        </Style>

        <!-- CheckBox için varsayılan stil -->
        <Style TargetType="CheckBox">
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>

        <!-- Slider Repeat Button Style - Must be defined BEFORE ModernSliderStyle -->
        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Modern Slider Style -->
        <Style x:Key="ModernSliderStyle" TargetType="{x:Type Slider}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Maximum" Value="100"/>
            <Setter Property="Minimum" Value="0"/>
            <Setter Property="Value" Value="0"/>
            <Setter Property="IsMoveToPointEnabled" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Grid VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                            <Border x:Name="TrackBackground" Grid.Row="1" Height="4" CornerRadius="2" Background="#E0E0E0" VerticalAlignment="Center">
                                <Canvas Margin="-6,0">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{TemplateBinding Foreground}" Height="4" Visibility="Hidden"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}" OverridesDefaultStyle="True">
                                        <RepeatButton.Template>
                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                <Border Height="4" CornerRadius="2,0,0,2" 
                                                        Background="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Slider}}"/>
                                            </ControlTemplate>
                                        </RepeatButton.Template>
                                    </RepeatButton>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Focusable="False" Width="14" Height="14" 
                                           Background="{TemplateBinding Foreground}" 
                                           OverridesDefaultStyle="True" VerticalAlignment="Center">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Grid>
                                                    <Ellipse Fill="{TemplateBinding Background}"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                            <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="#AAAAAA" Placement="Bottom" Height="4" Grid.Row="1" Margin="0,10,0,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                <Setter TargetName="PART_SelectionRange" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox ToggleButton Style (Must be defined BEFORE AppComboBoxStyle) -->
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.667 L 5.333,0 L 5.333,-1.78168 L 2.667,0.88501 L0,-1.78168 L0,0 Z" Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ComboBox}}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource TextSecondaryBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Application ComboBox Style -->
        <Style x:Key="AppComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="#333333"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,3"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                                <Border x:Name="dropDownBorder" Background="{StaticResource ControlBackgroundBrush}" BorderBrush="#333333" BorderThickness="1" CornerRadius="3" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                            <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="toggleButton" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush" TargetName="toggleButton" Value="{StaticResource PrimaryBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="templateRoot" Value="0.6"/>
                                <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>

    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Top Panel: Title and Hardware Info -->
        <Grid Grid.Row="0" Margin="0,0,0,15">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0">
                <TextBlock Text="Fan Control Center" 
                           FontSize="24" FontWeight="SemiBold" 
                           Foreground="{StaticResource TextPrimaryBrush}"/>
            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center">
                <CheckBox Content="Auto Start" 
                          IsChecked="{Binding IsAutoStartEnabled}" 
                          Margin="0,0,20,0"
                          VerticalAlignment="Center"
                          Foreground="#FFFFFF"/>

                <CheckBox Content="Minimize on Exit" 
                         IsChecked="{Binding MinimizeOnExit}"
                         VerticalAlignment="Center"
                         Foreground="#FFFFFF"/>
            </StackPanel>
        </Grid>

        <!-- Main Content -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Left Panel: Hardware Info and Manual Controls -->
            <Border Background="{StaticResource ControlBackgroundBrush}"
                    BorderBrush="#333333" BorderThickness="1"
                    CornerRadius="5" Margin="0" Padding="15">
                <Grid Margin="0,0,0,0" VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- CPU Status -->
                    <Border Grid.Column="0" BorderBrush="#333333" BorderThickness="1" Margin="0,0,5,0" CornerRadius="5" Padding="10">
                        <StackPanel>
                            <TextBlock Text="CPU" FontWeight="SemiBold" HorizontalAlignment="Center"/>
                            <TextBlock Text="{Binding HardwareInfo.CpuName}" TextWrapping="Wrap" 
                                       HorizontalAlignment="Center" Margin="0,5,0,10" 
                                       Foreground="{StaticResource TextSecondaryBrush}"/>

                            <Grid Margin="0,10,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Temperature:" Margin="0,0,5,0" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding HardwareInfo.CpuTemperature, StringFormat={}{0}°C}" VerticalAlignment="Center"/>
                                <ProgressBar Grid.Row="1" Grid.ColumnSpan="2" Minimum="0" Maximum="100" Value="{Binding HardwareInfo.CpuTemperature, TargetNullValue=0}" Height="6" Margin="0,3,0,0"/>
                            </Grid>

                            <Grid Margin="0,5,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Fan Speed:" Margin="0,0,5,0" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding HardwareInfo.CpuFanRpm, StringFormat={}{0} RPM}" VerticalAlignment="Center"/>
                                <ProgressBar Grid.Row="1" Grid.ColumnSpan="2" Minimum="0" Maximum="5100" Value="{Binding HardwareInfo.CpuFanRpm, TargetNullValue=0}" Height="6" Margin="0,3,0,0"/>
                            </Grid>

                            <!-- CPU Slider -->
                            <TextBlock Text="CPU Fan Speed" Margin="0,10,0,5"/>
                            <Slider Minimum="0" Maximum="100" Value="{Binding CpuManualSpeed}"
                                    Style="{StaticResource ModernSliderStyle}" 
                                    TickPlacement="None"
                                    Thumb.DragCompleted="Slider_DragCompleted"/>
                        </StackPanel>
                    </Border>

                    <!-- GPU Status -->
                    <Border Grid.Column="1" BorderBrush="#333333" BorderThickness="1" Margin="5,0,0,0" CornerRadius="5" Padding="10">
                        <StackPanel>
                            <TextBlock Text="GPU" FontWeight="SemiBold" HorizontalAlignment="Center"/>
                            <TextBlock Text="{Binding HardwareInfo.GpuName}" TextWrapping="Wrap" 
                                       HorizontalAlignment="Center" Margin="0,5,0,10" 
                                       Foreground="{StaticResource TextSecondaryBrush}"/>

                            <Grid Margin="0,10,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Temperature:" Margin="0,0,5,0" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding HardwareInfo.GpuTemperature, StringFormat={}{0}°C}" VerticalAlignment="Center"/>
                                <ProgressBar Grid.Row="1" Grid.ColumnSpan="2" Minimum="0" Maximum="100" Value="{Binding HardwareInfo.GpuTemperature, TargetNullValue=0}" Height="6" Margin="0,3,0,0"/>
                            </Grid>

                            <Grid Margin="0,5,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Fan Speed:" Margin="0,0,5,0" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding HardwareInfo.GpuFanRpm, StringFormat={}{0} RPM}" VerticalAlignment="Center"/>
                                <ProgressBar Grid.Row="1" Grid.ColumnSpan="2" Minimum="0" Maximum="5100" Value="{Binding HardwareInfo.GpuFanRpm, TargetNullValue=0}" Height="6" Margin="0,3,0,0"/>
                            </Grid>

                            <!-- GPU Slider -->
                            <TextBlock Text="GPU Fan Speed" Margin="0,10,0,5"/>
                            <Slider Minimum="0" Maximum="100" Value="{Binding GpuManualSpeed}"
                                    Style="{StaticResource ModernSliderStyle}" 
                                    TickPlacement="None"
                                    Thumb.DragCompleted="Slider_DragCompleted"/>
                        </StackPanel>
                    </Border>
                </Grid>
            </Border>
        </Grid>

        <!-- Bottom Panel: Status Information -->
        <Border Grid.Row="2" Margin="0,15,0,0" 
                Background="{StaticResource ControlBackgroundBrush}" 
                BorderBrush="#333333" BorderThickness="1" 
                CornerRadius="5" Padding="10">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Column="0" Text="Active Profile:" VerticalAlignment="Center" Margin="0,0,5,0"/>

                <ComboBox Grid.Column="1" 
                          ItemsSource="{Binding ProfileNames}"
                          SelectedItem="{Binding SelectedProfileName, Mode=TwoWay}"
                          MinWidth="95"
                          Style="{StaticResource AppComboBoxStyle}"
                          VerticalAlignment="Center" 
                          Margin="0,0,10,0">
                </ComboBox>

                <Button Grid.Column="2" 
                        Content="Change Hotkey"
                        Style="{StaticResource DefaultButtonStyle}"
                        Click="ChangeHotkey_Click"
                        Padding="8,4" Height="22"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        VerticalContentAlignment="Center"/>

                <TextBlock Grid.Column="3" 
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right">
                    <Hyperlink NavigateUri="https://github.com/mre31/Fan-Control-Center-WPF" Click="Github_Click" TextDecorations="None">
                        <StackPanel Orientation="Horizontal">
                            <Path Data="M8,0 C3.58,0 0,3.58 0,8 C0,11.54 2.29,14.53 5.47,15.59 C5.87,15.66 6.02,15.42 6.02,15.21 C6.02,15.02 6.01,14.39 6.01,13.72 C4,14.09 3.48,13.23 3.32,12.78 C3.23,12.55 2.84,11.84 2.5,11.65 C2.22,11.5 1.82,11.13 2.49,11.12 C3.12,11.11 3.57,11.7 3.72,11.94 C4.44,13.15 5.59,12.81 6.05,12.6 C6.12,12.08 6.33,11.73 6.56,11.53 C4.78,11.33 2.92,10.64 2.92,7.58 C2.92,6.71 3.23,5.99 3.74,5.43 C3.66,5.23 3.38,4.41 3.82,3.31 C3.82,3.31 4.49,3.1 6.02,4.13 C6.66,3.95 7.34,3.86 8.02,3.86 C8.7,3.86 9.38,3.95 10.02,4.13 C11.55,3.09 12.22,3.31 12.22,3.31 C12.66,4.41 12.38,5.23 12.3,5.43 C12.81,5.99 13.12,6.71 13.12,7.58 C13.12,10.65 11.25,11.33 9.47,11.53 C9.76,11.78 10.01,12.26 10.01,13.01 C10.01,14.08 10,14.94 10,15.21 C10,15.42 10.15,15.67 10.55,15.59 C13.71,14.53 16,11.53 16,8 C16,3.58 12.42,0 8,0 Z" 
                                  Fill="White" 
                                  Width="16" 
                                  Height="16" 
                                  Margin="0,0,5,0"
                                  VerticalAlignment="Center"/>
                            <TextBlock Text="Github" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Hyperlink>
                </TextBlock>
            </Grid>
        </Border>

        <!-- Hotkey Assignment Overlay -->
        <Grid Grid.Row="0" Grid.RowSpan="3" 
              Background="#80000000" 
              Visibility="{Binding IsHotkeyCapturing, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="-20,-40,-20,-28">
            <Grid.RowDefinitions>
                <RowDefinition Height="59*"/>
                <RowDefinition Height="25*"/>
            </Grid.RowDefinitions>
            <Border Background="{StaticResource ControlBackgroundBrush}" 
                    BorderBrush="{StaticResource PrimaryBrush}" 
                    BorderThickness="1" 
                    CornerRadius="5" 
                    Padding="20" Margin="254,134,254,8">
                <StackPanel VerticalAlignment="Center">

                    <TextBlock Text="Press the desired hotkey combination..." 
                               TextWrapping="Wrap" TextAlignment="Center" 
                               Margin="0,0,0,20" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    <Button Content="Cancel" 
                            HorizontalAlignment="Center" 
                            Style="{StaticResource DefaultButtonStyle}" 
                            Click="CancelHotkeyAssignment_Click"/>
                </StackPanel>
            </Border>
        </Grid>
        
        <!-- Hotkey Success Message Overlay -->
        <Grid Grid.Row="0" Grid.RowSpan="3" 
              Visibility="{Binding ShowHotkeySuccessMessage, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border Background="{StaticResource ControlBackgroundBrush}" 
                    BorderBrush="#4CAF50" 
                    BorderThickness="1" 
                    CornerRadius="5" 
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Padding="15" Margin="0,0,0,0">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <!-- Success Icon -->
                    <TextBlock Text="✓" 
                               Foreground="#4CAF50" 
                               FontSize="18" 
                               FontWeight="Bold"
                               Margin="0,0,10,0"
                               VerticalAlignment="Center"/>
                               
                    <!-- Success Message -->
                    <TextBlock Text="{Binding HotkeySuccessText}" 
                               Foreground="White"
                               VerticalAlignment="Center"/>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</Window>